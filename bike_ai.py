# -*- coding: utf-8 -*-
"""bike_ai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15tL5pkA-m4ELykDLdasqa98WBh5sBW1j
"""

import speech_recognition as sr
import sqlite3
import subprocess
from datetime import datetime

# Memory DB
conn = sqlite3.connect("memory.db")
cursor = conn.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS chats (
                  id INTEGER PRIMARY KEY,
                  user TEXT,
                  ai TEXT,
                  ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP)""")
conn.commit()

# AI Brain (simple offline rules for now)
def ai_brain(user_input):
    # Check memory
    cursor.execute("SELECT ai FROM chats WHERE user LIKE ?", ('%' + user_input + '%',))
    past = cursor.fetchall()
    if past:
        return f"You told me before: {past[0][0]}"
    return "I remember that now."

# Speak text
def speak(text):
    with open("output.txt", "w") as f:
        f.write(text)
    subprocess.run(["termux-tts-speak", text])

# Listen from mic
def listen():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("ðŸŽ¤ Speak...")
        audio = r.listen(source)
    try:
        text = r.recognize_sphinx(audio)
        print("YOU:", text)
        return text
    except:
        return ""

# Main loop
while True:
    user_input = listen()
    if not user_input:
        continue
    ai_reply = ai_brain(user_input)
    print("AI:", ai_reply)
    cursor.execute("INSERT INTO chats (user, ai) VALUES (?, ?)", (user_input, ai_reply))
    conn.commit()
    speak(ai_reply)